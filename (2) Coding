# 3. Coding
Regular:
To write the code for our web application, we will create a new Python file called main.py. 
This file will define the routes for our application, including a route for uploading data.
Simplify
We will create a new file called main.py and write some code that tells our web application what to do when someone visits our website or uploads some data. We will use Flask to help us write this code, makes it easier to make web applications. We'll also use a Google Cloud Pub/Sub to send a notification when someone uploads new data.


CODE:
from flask import Flask, request, redirect, url_for, render_template
from google.cloud import storage, pubsub_v1
import base64
import json

app = Flask(__name__)
bucket_name = 'BUCKET_NAME'
topic_name = 'TOPIC_NAME'
publisher = pubsub_v1.PublisherClient()
storage_client = storage.Client()

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/upload', methods=['POST'])
def upload():
    file = request.files['file']
    if file:
        filename = file.filename
        bucket = storage_client.bucket(bucket_name)
        blob = bucket.blob(filename)
        blob.upload_from_string(file.read(), content_type=file.content_type)
        message = {'bucket': bucket_name, 'filename': filename}
        message_data = json.dumps(message).encode('utf-8')
        topic_path = publisher.topic_path(storage_client.project, topic_name)
        publish_future = publisher.publish(topic_path, data=message_data)
        publish_future.result()
        return redirect(url_for('home'))

if __name__ == '__main__':
    app.run()
    
    
Output:
The output of this step will be the code for your web application, which defines the routes for uploading data and sends a notification to Google Cloud Pub/Sub.
    
    
