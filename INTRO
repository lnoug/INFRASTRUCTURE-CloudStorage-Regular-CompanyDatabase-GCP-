# INTRO

STEPS:
1. Create a GCP project and enable the required APIs.
2. Set up a Dialogflow agent with intents and entities for adding expenses and viewing budgets.
3. Configure a Pub/Sub topic and subscription to trigger a Cloud Function when a new message is received.
4. Write code for the Cloud Function that parses the message and stores it in Firestore.
5. Configure Firestore with a collection for expenses.
6. Implement a webhook in the Cloud Function that queries Firestore for the user's expenses and returns the response to Dialogflow.

SIMPLIFLY:

To make a chatbot for managing money, we need to do a few things.
First, we need to create a special place on the internet that the chatbot can live in. We call this place a "project". 
Then, we need to teach the chatbot how to understand what you're saying. We do this by creating special "intents" and "entities" in the chatbot's brain (which we call "Dialogflow").
Next, we need to create a way for the chatbot to know when you want to add a new expense or see your budget. We do this by setting up a special "channel" that the chatbot listens to. When you tell the chatbot something, it sends a message to this channel.
Then, we need to create a special program (which we call a "Cloud Function") that listens to the channel and does something when it gets a message. When the program gets a message from the chatbot, it adds the expense to a special place on the internet where we can keep track of all your expenses (which we call "Firestore").
Finally, we need to teach the program how to look up all your expenses and tell you how much money you've spent. We do this by creating a special "webhook" in the program that talks to Firestore and gets all your expenses. When you ask the chatbot to show you your budget, it talks to the program and the program gives it back all your expenses.
And that's how we make a chatbot for managing your money!
